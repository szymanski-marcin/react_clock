{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","current","Date","toUTCString","slice","timerId","getCurrent","currentTime","undefined","setState","getTime","timerTime","window","setInterval","console","info","stopTime","clearInterval","this","prevProps","oldClockSuffix","clockName","newClockSuffix","props","debug","className","React","Component","getRandomName","value","now","toString","App","hasClock","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"sNAWaA,EAAb,4MACEC,MAAe,CACbC,SAAS,IAAIC,MAAOC,cAAcC,OAAO,IAAK,GAC9CC,QAAS,GAHb,EAwBEC,WAAa,WACX,IAAMC,GAAc,IAAIL,MAAOC,cAAcC,OAAO,IAAK,GAE9B,OAAvB,EAAKJ,MAAMK,cAA2CG,IAAvB,EAAKR,MAAMK,SAC5C,EAAKI,SAAS,CAAER,QAASM,KA5B/B,EAgCEG,QAAU,WACR,IAAMC,EAAYC,OAAOC,aAAY,WACnC,EAAKP,aAELQ,QAAQC,KAAK,EAAKf,MAAMC,WACvB,KAEH,EAAKQ,SAAS,CAAEJ,QAASM,KAvC7B,EA0CEK,SAAW,WACkB,OAAvB,EAAKhB,MAAMK,cAA2CG,IAAvB,EAAKR,MAAMK,UAC5CO,OAAOK,cAAc,EAAKjB,MAAMK,SAChC,EAAKI,SAAS,CAAEJ,QAAS,SA7C/B,uDAME,WACEa,KAAKR,YAPT,gCAUE,SAAmBS,GACjB,IAAMC,EAAiBD,EAAUE,UAC3BC,EAAiBJ,KAAKK,MAAMF,UAE9BD,IAAmBE,GAErBR,QAAQU,MAAR,uBAA8BJ,EAA9B,eAAmDE,MAhBzD,kCAoBE,WACEJ,KAAKF,aArBT,oBAiDE,WACE,OACE,sBAAKS,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGP,KAAKK,MAAMF,YAGb,YAED,sBAAMI,UAAU,cAAhB,SACGP,KAAKlB,MAAMC,iBA3DtB,GAA2ByB,IAAMC,WCNjC,SAASC,IACP,IAAMC,EAAQ3B,KAAK4B,MAAMC,WAAW3B,OAAO,GAE3C,MAAM,SAAN,OAAgByB,GAQX,IAAMG,EAAb,4MACEhC,MAAQ,CACNqB,UAAW,UACXY,UAAU,GAHd,uDAOE,WAAqB,IAAD,OAClBrB,OAAOC,aAAY,WACjB,EAAKJ,SAAS,CACZY,UAAWO,QAEZ,MAEHM,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAK5B,SAAS,CAAEwB,UAAU,OAG5BC,SAASC,iBAAiB,SAAS,WACjC,EAAK1B,SAAS,CAAEwB,UAAU,SApBhC,oBA6BE,WACE,OACE,sBAAKR,UAAU,MAAf,UACE,6CAECP,KAAKlB,MAAMiC,UAAY,cAAC,EAAD,CAAOZ,UAAWH,KAAKlB,MAAMqB,mBAlC7D,GAAyBK,IAAMC,WCb/BW,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.de660147.chunk.js","sourcesContent":["import React from 'react';\n\ntype ClockProps = {\n  clockName: string,\n};\n\ntype State = {\n  current: string,\n  timerId: number | null,\n};\n\nexport class Clock extends React.Component<ClockProps, State> {\n  state: State = {\n    current: new Date().toUTCString().slice(-12, -4),\n    timerId: 0,\n  };\n\n  componentDidMount(): void {\n    this.getTime();\n  }\n\n  componentDidUpdate(prevProps: ClockProps): void {\n    const oldClockSuffix = prevProps.clockName;\n    const newClockSuffix = this.props.clockName;\n\n    if (oldClockSuffix !== newClockSuffix) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${oldClockSuffix} to ${newClockSuffix}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    this.stopTime();\n  }\n\n  getCurrent = () => {\n    const currentTime = new Date().toUTCString().slice(-12, -4);\n\n    if (this.state.timerId !== null && this.state.timerId !== undefined) {\n      this.setState({ current: currentTime });\n    }\n  };\n\n  getTime = () => {\n    const timerTime = window.setInterval(() => {\n      this.getCurrent();\n      // eslint-disable-next-line no-console\n      console.info(this.state.current);\n    }, 1000);\n\n    this.setState({ timerId: timerTime });\n  };\n\n  stopTime = () => {\n    if (this.state.timerId !== null && this.state.timerId !== undefined) {\n      window.clearInterval(this.state.timerId);\n      this.setState({ timerId: null });\n    }\n  };\n\n  render(): React.ReactNode {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.current}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\n\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string,\n  hasClock: boolean,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  // This code starts a timer\n  componentDidMount() {\n    window.setInterval(() => {\n      this.setState({\n        clockName: getRandomName(),\n      });\n    }, 3300);\n\n    document.addEventListener('contextmenu', (event: MouseEvent) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  // this code stops the timer\n  // componentWillUnmount(): void {\n  //   window.clearInterval(timerId);\n  // };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.hasClock && <Clock clockName={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}